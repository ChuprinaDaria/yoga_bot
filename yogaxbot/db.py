import os
import datetime
from sqlalchemy import (
    create_engine, Column, Integer, String, DateTime, Boolean, Text, ForeignKey, UniqueConstraint
)
from sqlalchemy.orm import declarative_base, sessionmaker, relationship
from sqlalchemy.exc import NoResultFound

# --- SQLAlchemy setup ---
Base = declarative_base()
DB_URL = os.getenv('DATABASE_URL', 'sqlite:///yogaxbot.db')
engine = create_engine(DB_URL, echo=False, future=True)
SessionLocal = sessionmaker(bind=engine, autoflush=False, autocommit=False)

# --- –ú–æ–¥–µ–ª—ñ ---
class User(Base):
    __tablename__ = 'users'
    user_id = Column(Integer, primary_key=True, autoincrement=False)
    status = Column(String, nullable=False, default='new')
    trial_started_at = Column(DateTime, nullable=True)
    trial_expires_at = Column(DateTime, nullable=True)
    last_reminder_at = Column(DateTime, nullable=True)
    extension_used = Column(Boolean, default=False, nullable=False)
    course_feedback_given = Column(Boolean, default=False)
    course_extension_used = Column(Boolean, default=False)
    feedback_message_id = Column(Integer, nullable=True)
    status_history = Column(Text, nullable=True)
    blocked = Column(Boolean, default=False, nullable=False)
    start_pending_at = Column(DateTime, nullable=True)
    pinned_menu_message_id = Column(Integer, nullable=True)
    workout_messages = relationship('WorkoutMessage', back_populates='user')

class WorkoutMessage(Base):
    __tablename__ = 'workout_messages'
    id = Column(Integer, primary_key=True)
    user_id = Column(Integer, ForeignKey('users.user_id'), nullable=False)
    chat_id = Column(Integer, nullable=False)
    message_id = Column(Integer, nullable=False)
    created_at = Column(DateTime, default=datetime.datetime.utcnow, nullable=False)
    user = relationship('User', back_populates='workout_messages')

class TextBlock(Base):
    __tablename__ = 'text_blocks'
    key = Column(String, primary_key=True)
    content = Column(Text, nullable=False)

class WorkoutCatalog(Base):
    __tablename__ = 'workout_catalogs'
    id = Column(Integer, primary_key=True)
    code = Column(String, unique=True, nullable=False)
    caption = Column(Text, nullable=False)
    url = Column(String, nullable=True)
    photo_file_id = Column(String, nullable=True)
    is_active = Column(Boolean, default=True, nullable=False)

class BroadcastLog(Base):
    __tablename__ = 'broadcast_logs'
    id = Column(Integer, primary_key=True)
    created_at = Column(DateTime, default=datetime.datetime.utcnow, nullable=False)
    kind = Column(String, nullable=False)
    payload_preview = Column(Text, nullable=True)
    total = Column(Integer, nullable=False)
    success = Column(Integer, nullable=False)
    failed = Column(Integer, nullable=False)

# --- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å ---
Base.metadata.create_all(engine)

# --- –î–µ—Ñ–æ–ª—Ç–Ω—ñ —Ç–µ–∫—Å—Ç–∏ ---
DEFAULT_TEXTS = {
    'WELCOME': (
        '<b>–ü—Ä–∏–≤—ñ—Ç! –í—ñ—Ç–∞—é –≤–∞—Å —É –º–æ—ó–π –æ–Ω–ª–∞–π–Ω —à–∫–æ–ª—ñ –π–æ–≥–∏ - –Ω–∞ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ–º—É –∫—É—Ä—Å—ñ</b>. '
        '<i>–Ø –°–µ—Ä–≥—ñ–π –î–æ—Ä–æ—à–µ–Ω–∫–æ - –•–∞—Ä–∫—ñ–≤—Å—å–∫–∏–π –ø—Ä–∞–∫—Ç–∏–∫ –π–æ–≥–∏ —ñ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π –≤–∏–∫–ª–∞–¥–∞—á —ñ–∑ 2009 —Ä–æ–∫—É.</i>\n\n'
        '–ü—Ä–æ—Ç—è–≥–æ–º –∫—ñ–ª—å–∫–æ—Ö –¥–Ω—ñ–≤ –≤–∏ —Å–ø—Ä–æ–±—É—î—Ç–µ –∫—ñ–ª—å–∫–∞ –∑–∞–Ω—è—Ç—å —ñ–∑ –º–æ—î—ó –æ–Ω–ª–∞–π–Ω –π–æ–≥–∞ —Å—Ç—É–¥—ñ—ó —ñ –≤—ñ–¥—á—É—î—Ç–µ (—è–∫—â–æ –ø–æ–∑–∞–π–º–∞—î—Ç–µ—Å—å) –Ω–∞ —Å–æ–±—ñ –µ—Ñ–µ–∫—Ç –±–∞–∑–æ–≤–∏—Ö —Ç—Ä–µ–Ω—É–≤–∞–Ω—å. '
        '–¢—É—Ç —É —á–∞—Ç—ñ –±—É–¥—É—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–∞–Ω—è—Ç—Ç—è —Ç–∞ –∫—ñ–ª—å–∫–∞ –ª–µ–∫—Ü—ñ–π.\n\n'
        '–°–ø–æ–¥—ñ–≤–∞—é—Å—å, –≤–∏ –∑–Ω–∞–π–¥–µ—Ç–µ —á–∞—Å –∑–∞–π–º–∞—Ç–∏—Å—è —ñ –≤—ñ–¥—á—É—Ç–∏ –Ω–∞ —Å–æ–±—ñ –µ—Ñ–µ–∫—Ç.\n\n'
        '–í—Å—ñ —Å–≤–æ—ó –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –≤–∏ –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç–∏ —É —á–∞—Ç —à–∫–æ–ª–∏ –π–æ–≥–∏: –ø–æ—Å–∏–ª–∞–Ω–Ω—è https://t.me/+xA1DOM00cc4zYmRi '
        '—É –≤–∏–≥–ª—è–¥—ñ –∫–Ω–æ–ø–∫–∏ "—á–∞—Ç —à–∫–æ–ª–∏ –π–æ–≥–∏" ‚Äî —è –æ—Å–æ–±–∏—Å—Ç–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è.'
    ),
    'COURSE_FINISHED': (
        '–î–æ–±—Ä–æ–≥–æ –¥–Ω—è! –ù–∞–≥–∞–¥–∞—é —â–æ –≤—ñ–¥–∫—Ä–∏—Ç–∏–π –∫—É—Ä—Å –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n'
        '–ß–∏ –≤–¥–∞–ª–æ—Å—è –≤–∞–º –∑–∞–π–º–∞—Ç–∏—Å—è —É —Ü—ñ –¥–Ω—ñ?'
    ),
    'FEEDBACK_POSITIVE': (
        '–°—É–ø–µ—Ä,) –°–ø–æ–¥—ñ–≤–∞—é—Å—å –≤–∞–º –±—É–ª–æ —Ü—ñ–∫–∞–≤–æ —ñ —î –±–∞–∂–∞–Ω–Ω—è –ø—Ä–æ–¥–æ–≤–∂—É–≤–∞—Ç–∏ –∑–∞–Ω—è—Ç—Ç—è —Ä–∞–∑–æ–º.\n'
        '–°–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –¥–ª—è —É—á–∞—Å–Ω–∏–∫—ñ–≤ –≤—ñ–¥–∫—Ä–∏—Ç–æ–≥–æ –∫—É—Ä—Å—É –¥—ñ—î –∑–Ω–∏–∂–∫–∞ –Ω–∞ –ø–µ—Ä—à–∏–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç —É —à–∫–æ–ª—É –π–æ–≥–∏:'
    ),
    'FEEDBACK_NEGATIVE': (
        '–ü—Ä–æ–ø–æ–Ω—É—é –≤–∞–º –≤—Å–µ–∂ —Ç–∞–∫–∏ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ :)\n'
        '–ö–æ–ª–∏ –∑–Ω–∞–π–¥–µ—Ç–µ —á–∞—Å - –ø—Ä–∏—Ö–æ–¥—å—Ç–µ —ñ –ø–æ—á–∏–Ω–∞–π—Ç–µ\n'
        '–ö—É—Ä—Å –±—É–¥–µ –¥–æ—Å—Ç—É–ø–µ–Ω —â–µ 1 –¥–µ–Ω—å'
    ),
    'FINAL_COURSE_END': (
        '–í—ñ–¥–∫—Ä–∏—Ç–∏–π –∫—É—Ä—Å –π–æ–≥–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ - –±—É–¥—É —Ä–∞–¥–∏–π –±—É–¥—å —è–∫–∏–º –≤–∞—à–∏–º –∑–∞–ø–∏—Ç–∞–Ω–Ω—è–º'
    ),
    'OPEN_COURSE_INTRO': (
        '–ó–∞–≥–∞–ª–æ–º —É —à–∫–æ–ª—ñ –π–æ–≥–∏ 300 —Ç–µ–º–∞—Ç–∏—á–Ω–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫, –ª–µ–∫—Ü—ñ–π —ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å - –≤—ñ–¥ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Ä—ñ–≤–Ω—è –¥–æ —ñ–Ω—Ç–µ–Ω—Å–∏–≤—ñ–≤ —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –¥–ª—è –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤ –π–æ–≥–∏.\n'
        '–ê–ª–µ —Ü–µ –≤—Å–µ –ø–æ—Ç—ñ–º - –¥–∞–≤–∞–π—Ç–µ –ø–æ—á–Ω–µ–º–æ —ñ–∑ –≤—ñ–¥–∫—Ä–∏—Ç–æ–≥–æ –∫—É—Ä—Å—É –¥–ª—è –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞.'
    ),
    'POST_LESSONS': (
        '–Ø–∫—â–æ –≤–∞–∂–∫–æ –æ–±—Ä–∞—Ç–∏ - —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ—á–∞—Ç–∏ —ñ–∑ —É—Ä–æ–∫—É 159 –¥–ª—è —à–∏—ó —Ç–∞ –≥—Ä—É–¥–Ω–æ–≥–æ –≤—ñ–¥–¥—ñ–ª—É üí™'
    ),
    'REMINDER_WITH_DAYS': (
        '–ó–∞–ª–∏—à–∏–ª–æ—Å—å "{days_left} –¥–Ω—ñ–≤" –¥—ñ—ó –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ–≥–æ –∫—É—Ä—Å—É –π–æ–≥–∏.\n'
        '–†–æ–∑—É–º—ñ—é —è–∫ –≤–∞–∂–∫–æ –æ—Ä–≥–∞–Ω—ñ–∑—É–≤–∞—Ç–∏ —Å–µ–±–µ –¥–ª—è –∑–∞–Ω—è—Ç—å –æ–Ω–ª–∞–π–Ω —Ç–æ–º—É —Ç–∞–∫—ñ –ª–∞–≥—ñ–¥–Ω—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è.\n'
        '–°–æ—Ä—ñ —â–æ –≤—ñ–¥–≤–æ–ª—ñ–∫–∞—é ü§ù\n\n'
        '–Ø–∫—â–æ –≤–∏ –≤–∂–µ –ø–æ—á–∞–ª–∏ –∑–∞–π–º–∞—Ç–∏—Å—è —ñ —É –≤–∞—Å —î –∑–∞–ø–∏—Ç–∞–Ω–Ω—è - –±—É–¥—É —Ä–∞–¥–∏–π –≤–∞—Å —á—É—Ç–∏:'
    ),
    'START_NOW_MSG': (
        '–ì–æ—Ç–æ–≤—ñ –ø–æ—á–∞—Ç–∏? –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ!'
    ),
    'REMINDER_TPL': (
        '–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: –Ω–µ –∑–∞–±—É–¥—å—Ç–µ —Å—å–æ–≥–æ–¥–Ω—ñ –ø–æ—Ç—Ä–µ–Ω—É–≤–∞—Ç–∏—Å—è!\n'
        '–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å –≤–∞–∂–ª–∏–≤–∏–π –¥–ª—è –Ω–∞—Å.'
    ),
    'AFTER_EXPIRE': (
        '–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É –∑–∞–≤–µ—Ä—à–∏–≤—Å—è.\n'
        '–û—Ñ–æ—Ä–º—ñ—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è.'
    ),
}

# --- –•–µ–ª–ø–µ—Ä –¥–ª—è —Ç–µ–∫—Å—Ç—ñ–≤ ---
def T_session():
    return SessionLocal()

async def T(key, **fmt):
    session = T_session()
    try:
        block = session.query(TextBlock).filter_by(key=key).first()
        text = block.content if block else DEFAULT_TEXTS.get(key, key)
    finally:
        session.close()
    if fmt:
        try:
            text = text.format(**fmt)
        except Exception:
            pass
    return text


def log_status_change(user, old_status, new_status, reason: str = "") -> None:
    import json
    import datetime as _dt

    if not getattr(user, 'status_history', None):
        user.status_history = "[]"

    try:
        history = json.loads(user.status_history)
    except Exception:
        history = []
    history.append({
        "timestamp": _dt.datetime.utcnow().isoformat(),
        "from": old_status,
        "to": new_status,
        "reason": reason,
    })
    try:
        user.status_history = json.dumps(history)
    except Exception:
        # –£ —Ä–∞–∑—ñ –Ω–µ–º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ —Å–µ—Ä—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ ‚Äî —ñ–≥–Ω–æ—Ä—É—î–º–æ, —â–æ–± –Ω–µ –ª–∞–º–∞—Ç–∏ –ª–æ–≥—ñ–∫—É
        pass

def seed_free_workouts_if_empty() -> None:
    session = SessionLocal()
    try:
        has_any = session.query(WorkoutCatalog).first() is not None
        if has_any:
            return
        items = [
            {
                'code': '360',
                'caption': "–º º—è–∫–∞ —Ä–∞–Ω–∫–æ–≤–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞ –ø—Ä–æ–±—É–¥–∂–µ–Ω–Ω—è —ñ –∑–Ω—è—Ç—Ç—è —Å–∫—É—Ç–æ—Å—Ç—ñ. –ó–º—ñ—Ü–Ω–µ–Ω–Ω—è —ñ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è. 29 —Ö–≤–∏–ª–∏–Ω",
                'url': 'https://vimeopro.com/seryogaji/fem'
            },
            {
                'code': '159',
                'caption': "–û–¥–Ω–µ —ñ–∑ –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–∏—Ö —Ç—Ä–µ–Ω—É–≤–∞–Ω—å —É —à–∫–æ–ª—ñ –π–æ–≥–∏ ‚Äî –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è –ª–æ–ø–∞—Ç–æ–∫ —Ç–∞ –≥—Ä—É–¥–Ω–æ–≥–æ –≤—ñ–¥–¥—ñ–ª—É –≤—ñ–¥ –Ω–∞–ø—Ä—É–≥–∏. 35 —Ö–≤–∏–ª–∏–Ω",
                'url': 'https://vimeopro.com/seryogaji/dy'
            },
            {
                'code': '351',
                'caption': "–ú º—è–∫–∞ —Ä–∞–Ω–∫–æ–≤–∞ —Å–∏–ª–æ–≤–∞ —Ä—É—Ö–∞–Ω–∫–∞ –Ω–∞ –∫–æ–∂–µ–Ω –¥–µ–Ω—å ‚Äî 33 —Ö–≤–∏–ª–∏–Ω–∏",
                'url': 'https://vimeopro.com/seryogaji/er'
            },
            {
                'code': '287',
                'caption': "–ü—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è —Ö—Ä–µ–±—Ç–∞ –≤—ñ–¥ —Å–∫—É—Ç–æ—Å—Ç—ñ —Ç–∞ –ø–æ–≤–Ω–µ —Ä–æ–∑—Å–ª–∞–±–ª–µ–Ω–Ω—è –º º—è–∑—ñ–≤ —Å–ø–∏–Ω–∏",
                'url': 'https://vimeopro.com/seryogaji/wdf'
            },
            {
                'code': '358',
                'caption': "–ó–≤—ñ–ª—å–Ω–µ–Ω–Ω—è —Ç–∞–∑—É —ñ –ø–æ–ø–µ—Ä–µ–∫—É. –°–∏–ª–∞ —Ç–∞ –≥–Ω—É—á–∫—ñ—Å—Ç—å. 48 —Ö–≤–∏–ª–∏–Ω",
                'url': 'https://vimeopro.com/seryogaji/duo'
            },
            {
                'code': '193',
                'caption': "–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ —Ä–æ–±–æ—Ç—ñ —ñ–∑ –≤—Å—ñ–º —Ç—ñ–ª–æ–º: —ñ —Å–∏–ª–æ–≤—ñ, —ñ —Ç—Ä–æ—Ö–∏ –±–∞–ª–∞–Ω—Å—ñ–≤, —ñ –≥–Ω—É—á–∫—ñ—Å—Ç—å, —ñ –ø—Ä–æ–±—É–¥–∂–µ–Ω–Ω—è. 37 —Ö–≤–∏–ª–∏–Ω",
                'url': 'https://vimeopro.com/seryogaji/wq'
            },
        ]
        for it in items:
            existing = session.query(WorkoutCatalog).filter_by(code=it['code']).first()
            if existing:
                existing.caption = it['caption']
                existing.url = it['url']
                existing.is_active = True
            else:
                session.add(WorkoutCatalog(
                    code=it['code'],
                    caption=it['caption'],
                    url=it['url'],
                    photo_file_id='',
                    is_active=True
                ))
        session.commit()
    finally:
        session.close()

def ensure_welcome_seeded() -> None:
    session = SessionLocal()
    try:
        # –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–∞–ø–∏—Å—É WELCOME ‚Äî –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è DEFAULT_TEXTS
        block = session.query(TextBlock).filter_by(key='WELCOME').first()
        if not block:
            session.add(TextBlock(key='WELCOME', content=DEFAULT_TEXTS['WELCOME']))
        # –§–æ—Ç–æ —Ç–∞ –∫–Ω–æ–ø–∫–∞ ‚Äî –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ, —Å—Ç–≤–æ—Ä—é—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ —ñ —î –¥–µ—Ñ–æ–ª—Ç–∏ (–¥–ª—è —Ñ–æ—Ç–æ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ)
        session.commit()
    finally:
        session.close()
